<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Feed</title>
</head>
<body>
    <video id="video" width="400" height=400></video>
    <canvas id="feed1"></canvas>
    <button id="capImage">Take Photo</button>
    <button id="capVideo">Start Video Record</button>
    <button id="capAudio">Start Audio Record</button>
    <div id="feed" style="width:50px">

    </div>
    <canvas id="capture" style="display: none;" width="400" height="300"></canvas>
    <script>
            let video = document.getElementById("video")
            let prop = {video:true, audio:true} 
            let canvas = document.getElementById('capture')
            let ctx = canvas.getContext('2d')
            let feed = document.getElementById('feed')
            let started = null
            
            navigator.getUserMedia(prop, (stream)=>{
                video.srcObject = stream
                video.play()
                let mediaRecorder = new MediaRecorder(stream)
                let chunks = []
                mediaRecorder.ondataavailable = (values) => {
                    chunks.push(values.data)
                }
                mediaRecorder.onstop = () => {
                    let blob = new Blob(chunks, {type:'video/mp4'})
                    chunks = []
                    let vid = document.createElement('video')
                    vid.setAttribute('src', window.URL.createObjectURL(blob))
                    vid.setAttribute('controls', '')
                    feed.appendChild(vid)
                }
                document.getElementById('capVideo').addEventListener('click', ()=>{
                    if(started)
                    {
                        started = false
                        document.getElementById('capVideo').innerHTML = 'Start video Record'
                        mediaRecorder.stop()
                    }
                    else
                    {
                        started = true
                        mediaRecorder.start()
                        document.getElementById('capVideo').innerHTML = 'Stop video Record'
                        
                    }
                    console.log(mediaRecorder.state)
                })

                document.getElementById('capAudio').addEventListener('click', ()=>{
                    if(started)
                    {
                        started = false
                        document.getElementById('capVideo').innerHTML = 'Start video Record'
                        mediaRecorder.stop()
                    }
                    else
                    {
                        started = true
                        mediaRecorder.start()
                        document.getElementById('capVideo').innerHTML = 'Stop video Record'
                        mediaRecorder.onstop = () => {
                            let blob = new Blob(chunks, {type:'audio/mp3'})
                            chunks = []
                            let aud = document.createElement('audio')
                            aud.setAttribute('src', window.URL.createObjectURL(blob))
                            aud.setAttribute('controls', '')
                            feed.appendChild(aud)
                        }
                        
                    }
                    console.log(mediaRecorder.state)
                })

                

            }, (error) => alert(error))

            document.getElementById('capImage').addEventListener('click', ()=> {
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height)

                let img = document.createElement('img')
                img.setAttribute('src', canvas.toDataURL('image/png'))
                feed.appendChild(img)

            })

            
            
            
    </script>
</body>
</html>